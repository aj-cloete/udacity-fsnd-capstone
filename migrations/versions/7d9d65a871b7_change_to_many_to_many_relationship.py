"""change to many-to-many relationship

Revision ID: 7d9d65a871b7
Revises: e69a1b37d5a8
Create Date: 2021-03-22 10:11:36.588324

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "7d9d65a871b7"
down_revision = "e69a1b37d5a8"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "movies_actors",
        sa.Column("actor_uuid", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("movie_uuid", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["actor_uuid"],
            ["actors.uuid"],
            name=op.f("fk_movies_actors_actor_uuid_actors"),
        ),
        sa.ForeignKeyConstraint(
            ["movie_uuid"],
            ["movies.uuid"],
            name=op.f("fk_movies_actors_movie_uuid_movies"),
        ),
    )
    op.drop_constraint("fk_actors_movie_uuid_movies", "actors", type_="foreignkey")
    op.drop_column("actors", "movie_uuid")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "actors",
        sa.Column("movie_uuid", postgresql.UUID(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        "fk_actors_movie_uuid_movies", "actors", "movies", ["movie_uuid"], ["uuid"]
    )
    op.drop_table("movies_actors")
    # ### end Alembic commands ###
